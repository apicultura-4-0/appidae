{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udc1d Welcome","text":"<p>The purpose of the application is to offer comprehensive support to bee producers in managing their hives and ensuring optimal locations for the production of organic honey, therefore, enjoying the comparative gains of this type of honey. </p>"},{"location":"#appidae","title":"\ud83d\udcf2 APPIDAE","text":"<p>Called Appidae, the application was named after the Apinae subfamily of bees, belonging to the Apidae family, which encompasses 21 different tribes of bees, especially the native stingless bees.</p>"},{"location":"Branching%20Strategy/","title":"Branching Strategy","text":"<p>The main idea behind the Git flow branching strategy is to isolate your work into different types of branches. </p>"},{"location":"Branching%20Strategy/#branches","title":"Branches:","text":"<ul> <li>Branch main: Contains production-level code, wich is the most consolidated code existing in the application. No team member is authorized to make commits directly to main, except commits related to documentation.</li> <li>Branch Dev: Has code under development and after testing and approval can merge it into the main branch.</li> </ul>"},{"location":"Semantic%20Commit/","title":"Semantic Commit Messages","text":"<p>To maintain an organization of the commits that will be made in the branches, follow the practices:</p>"},{"location":"Semantic%20Commit/#format","title":"Format:","text":"<pre><code>&lt;type&gt;(#issue number): subject\n</code></pre>"},{"location":"Semantic%20Commit/#types","title":"Types:","text":"<ul> <li><code>feat</code>: (new feature for the user, not a new feature for build script)</li> <li><code>fix</code>: (bug fix for the user, not a fix to a build script)</li> <li><code>docs</code>: (changes to the documentation)</li> <li><code>style</code>: (formatting, missing semi colons, etc; no production code change)</li> <li><code>refactor</code>: (refactoring production code, eg. renaming a variable)</li> <li><code>test</code>: (adding missing tests, refactoring tests; no production code change)</li> <li><code>chore</code>: (updating grunt tasks etc; no production code change)</li> </ul>"},{"location":"Semantic%20Commit/#subject","title":"Subject:","text":"<ul> <li>Always use lowercase letters </li> <li>Always in English</li> <li>Always in present tense </li> </ul>"},{"location":"Semantic%20Commit/#example","title":"Example:","text":"<pre><code>git commit -m \"feat:(#02): add hat wobble\"\n</code></pre>"},{"location":"Semantic%20Commit/#references","title":"References:","text":"<ul> <li>https://gist.github.com/joshbuchea/6f47e86d2510bce28f8e7f42ae84c716</li> </ul>"}]}